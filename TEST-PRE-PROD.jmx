<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Pre Prod Hotel Script" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.1.1.312. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36</stringProp>
          </elementProp>
          <elementProp name="Accept-Language" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">en-GB,en-US;q=0.8,en;q=0.6</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">14.142.50.224</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">100</stringProp>
        <longProp name="ThreadGroup.start_time">1363247040000</longProp>
        <longProp name="ThreadGroup.end_time">1363247040000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="loginAction" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
                <stringProp name="Argument.value">ip7boM-ix2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="displayUserType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">displayUserType</stringProp>
                <stringProp name="Argument.value">AGN231</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="userAlias" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">userAlias</stringProp>
                <stringProp name="Argument.value">xyza@yopmail.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/login/loginAction</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">200000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/login/signOut</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">0</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="dashboardHome" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/dashboard/dashboardHome</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">180000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/login/signOut</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, sdch</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1061</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="agenttodolistget" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;taskId&quot;:&quot;&quot;,&quot;taskMessage&quot;:&quot;&quot;,&quot;taskType&quot;:0,&quot;dueDate&quot;:&quot;&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/dashboard/agenttodolistget</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">180000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/dashboard/dashboardHome</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">872</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="dashboardLatestTxns" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;selRepFlightType&quot;:&quot;0&quot;,&quot;selRepHotelType&quot;:&quot;&quot;,&quot;selRepInsuranceType&quot;:&quot;&quot;,&quot;reportFrom&quot;:&quot;0&quot;,&quot;userType&quot;:&quot;manager&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/dashboard/dashboardLatestTxns</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">180000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/dashboard/dashboardHome</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="dashboardreportget" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;selRepFlightType&quot;:&quot;0&quot;,&quot;selRepHotelType&quot;:&quot;&quot;,&quot;selRepInsuranceType&quot;:&quot;&quot;,&quot;reportFrom&quot;:&quot;0&quot;,&quot;userType&quot;:&quot;manager&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/dashboard/dashboardreportget</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">180000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/dashboard/dashboardHome</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="dashboardreportget" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;selRepFlightType&quot;:&quot;0&quot;,&quot;selRepHotelType&quot;:&quot;0&quot;,&quot;selRepInsuranceType&quot;:&quot;&quot;,&quot;reportFrom&quot;:&quot;1&quot;,&quot;userType&quot;:&quot;manager&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/dashboard/dashboardreportget</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">180000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/dashboard/dashboardHome</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">9</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="dashboardreportget" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;selRepFlightType&quot;:&quot;0&quot;,&quot;selRepHotelType&quot;:&quot;0&quot;,&quot;selRepInsuranceType&quot;:&quot;0&quot;,&quot;reportFrom&quot;:&quot;3&quot;,&quot;userType&quot;:&quot;manager&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/dashboard/dashboardreportget</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">180000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/dashboard/dashboardHome</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">7</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="fetchPicByAgentId" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;agentId&quot;:&quot;1117&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/dashboard/fetchPicByAgentId</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">180000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/dashboard/dashboardHome</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">87</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="hotelWidget" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/hotel/hotelWidget</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">90000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/dashboard/dashboardHome</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, sdch</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1263</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getLastFiveSearch" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/hotel/getLastFiveSearch</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">180000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/hotel/hotelWidget</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, sdch</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">751</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAutoSuggest" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="searchInput" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">searchInput</stringProp>
                <stringProp name="Argument.value">${searchInput}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/hotel/getAutoSuggest</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">180000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">citycountry.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">searchInput,searchInput1</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/hotel/hotelWidget</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">9327</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">searchInput</stringProp>
            <stringProp name="RegexExtractor.regex">(\w+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Paris</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">searchInput1</stringProp>
            <stringProp name="RegexExtractor.regex">(\w+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">France</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="hotelListing" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNumber" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">pageNumber</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cityCode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cityCode</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="latitude" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">latitude</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="noOfAdults" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">noOfAdults</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="checkInDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">checkInDate</stringProp>
                <stringProp name="Argument.value">${myFutureDate}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="hotelWidgetElement[0].childAges[0].age" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">hotelWidgetElement[0].childAges[0].age</stringProp>
                <stringProp name="Argument.value">${hotelWidgetElement[0].childAges[0].age}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="nationalityCode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">nationalityCode</stringProp>
                <stringProp name="Argument.value">IN</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="checkOutDate" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">checkOutDate</stringProp>
                <stringProp name="Argument.value">${myFutureDate1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="cityName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">cityName</stringProp>
                <stringProp name="Argument.value">${searchInput}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="countryCode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">countryCode</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="hotelWidgetElement[0].noOfChilds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">hotelWidgetElement[0].noOfChilds</stringProp>
                <stringProp name="Argument.value">${hotelWidgetElement[0].noOfChilds}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="residence" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">residence</stringProp>
                <stringProp name="Argument.value">Indonesia</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="hotelWidgetElement[0].noOfAdults" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">hotelWidgetElement[0].noOfAdults</stringProp>
                <stringProp name="Argument.value">${hotelWidgetElement[0].noOfAdults}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="noOfChilds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">noOfChilds</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="longitude" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">longitude</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="locationName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">locationName</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="userAgent" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">userAgent</stringProp>
                <stringProp name="Argument.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36 (Linux x86_64)</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="hotelName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">hotelName</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="travelFor" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">travelFor</stringProp>
                <stringProp name="Argument.value">work</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="geoString" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">geoString</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="passengerType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">passengerType</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="nationality" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">nationality</stringProp>
                <stringProp name="Argument.value">India</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="residenceCode" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">residenceCode</stringProp>
                <stringProp name="Argument.value">ID</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="countryName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">countryName</stringProp>
                <stringProp name="Argument.value">${searchInput1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="hotelWidgetElement[1].noOfChilds" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${hotelWidgetElement[1].noOfChilds}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hotelWidgetElement[1].noOfChilds</stringProp>
              </elementProp>
              <elementProp name="hotelWidgetElement[1].noOfAdults" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${hotelWidgetElement[1].noOfAdults}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hotelWidgetElement[1].noOfAdults</stringProp>
              </elementProp>
              <elementProp name="hotelWidgetElement[1].childAges[0].age" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${hotelWidgetElement[1].childAges[0].age}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hotelWidgetElement[1].childAges[0].age</stringProp>
              </elementProp>
              <elementProp name="hotelWidgetElement[1].childAges[1].age" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${hotelWidgetElement[1].childAges[1].age}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">hotelWidgetElement[1].childAges[1].age</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/hotel/hotelListing</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">180000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">parameters.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">hotelWidgetElement[0].noOfAdults,hotelWidgetElement[0].noOfChilds,hotelWidgetElement[0].childAges[0].age,hotelWidgetElement[1].noOfAdults,hotelWidgetElement[1].noOfChilds,hotelWidgetElement[1].childAges[0].age,hotelWidgetElement[1].childAges[1].age,noOfAdults</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/hotel/hotelWidget</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="i" elementType="Argument">
                <stringProp name="Argument.name">i</stringProp>
                <stringProp name="Argument.value">3</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="max" elementType="Argument">
                <stringProp name="Argument.name">max</stringProp>
                <stringProp name="Argument.value">50</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sample" elementType="Argument">
                <stringProp name="Argument.name">sample</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">5</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">${sample}</stringProp>
            <stringProp name="CounterConfig.name">i</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">15500</stringProp>
          </ConstantTimer>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters">myFutureDate,myFutureDate1</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import java.text.SimpleDateFormat; 
    import java.util.Date; 
    Date date = new Date(); 
    Date date1 = new Date(); 
    Date diff  = new Date(); 
    int days; 
    date.setDate(date.getDate()+${i}); 
    SimpleDateFormat df = new SimpleDateFormat(&quot;dd/MM/yyyy&quot;); 
    String formattedDate = df.format(date); 
    vars.put(&quot;myFutureDate&quot;,formattedDate); 
  
    date1.setDate(date1.getDate()+(${i}+${sample})); 
    SimpleDateFormat df1 = new SimpleDateFormat(&quot;dd/MM/yyyy&quot;); 
    String formattedDate1 = df1.format(date1); 
    vars.put(&quot;myFutureDate1&quot;,formattedDate1);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="hotel-rangeSlider.html" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/static/html/hotel/hotel-rangeSlider.html</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">60000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/hotel/hotelListing</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, sdch</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="searchLimitResult" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;cityName&quot;:&quot;${searchInput}&quot;,&quot;cityCode&quot;:&quot;&quot;,&quot;countryName&quot;:&quot;${searchInput1}&quot;,&quot;checkInDate&quot;:&quot;${myFutureDate}&quot;,&quot;checkOutDate&quot;:&quot;${myFutureDate1}&quot;,&quot;nationality&quot;:&quot;India&quot;,&quot;nationalityCode&quot;:&quot;IN&quot;,&quot;travelFor&quot;:&quot;work&quot;,&quot;noOfRooms&quot;:2,&quot;noOfAdults&quot;:${noOfAdults},&quot;noOfChilds&quot;:${noOfChilds},&quot;noOfDays&quot;:2,&quot;pageNumber&quot;:0,&quot;totalGuests&quot;:${totalGuests},&quot;residence&quot;:&quot;Indonesia&quot;,&quot;residenceCode&quot;:&quot;ID&quot;,&quot;geoString&quot;:&quot;&quot;,&quot;hotelWidgetElement&quot;:[{&quot;noOfAdults&quot;:${hotelWidgetElement[0].noOfAdults},&quot;noOfChilds&quot;:${hotelWidgetElement[0].noOfChilds},&quot;childAges&quot;:[{&quot;age&quot;:${hotelWidgetElement[0].childAges[0].age}}]},{&quot;noOfAdults&quot;:${hotelWidgetElement[1].noOfAdults},&quot;noOfChilds&quot;:${hotelWidgetElement[1].noOfChilds},&quot;childAges&quot;:[{&quot;age&quot;:${hotelWidgetElement[1].childAges[0].age}},{&quot;age&quot;:${hotelWidgetElement[1].childAges[1].age}}]}],&quot;guestDetails&quot;:{},&quot;countryCode&quot;:&quot;&quot;,&quot;hotelName&quot;:&quot;&quot;,&quot;locationName&quot;:&quot;&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (X11) (Linux x86_64)&quot;,&quot;productSequence&quot;:0,&quot;passengerType&quot;:&quot;&quot;,&quot;passengerIdList&quot;:[],&quot;corporateIdList&quot;:[]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/hotel/searchLimitResult</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">180000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">adult.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">noOfAdults,noOfChilds,totalGuests</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/hotel/hotelListing</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHotelResults" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchStaticReqBean&quot;:{&quot;cityName&quot;:&quot;${searchInput}&quot;,&quot;cityCode&quot;:&quot;&quot;,&quot;countryName&quot;:&quot;${searchInput1}&quot;,&quot;checkInDate&quot;:&quot;${myFutureDate}&quot;,&quot;checkOutDate&quot;:&quot;${myFutureDate1}&quot;,&quot;nationality&quot;:&quot;India&quot;,&quot;nationalityCode&quot;:&quot;IN&quot;,&quot;travelFor&quot;:&quot;work&quot;,&quot;noOfRooms&quot;:2,&quot;noOfAdults&quot;:${noOfAdults},&quot;noOfChilds&quot;:${noOfChilds},&quot;noOfDays&quot;:2,&quot;pageNumber&quot;:0,&quot;totalGuests&quot;:${totalGuests},&quot;residence&quot;:&quot;Indonesia&quot;,&quot;residenceCode&quot;:&quot;ID&quot;,&quot;geoString&quot;:&quot;&quot;,&quot;hotelWidgetElement&quot;:[{&quot;noOfAdults&quot;:${hotelWidgetElement[0].noOfAdults},&quot;noOfChilds&quot;:${hotelWidgetElement[0].noOfChilds},&quot;childAges&quot;:[{&quot;age&quot;:${hotelWidgetElement[0].childAges[0].age}}]},{&quot;noOfAdults&quot;:${hotelWidgetElement[1].noOfAdults},&quot;noOfChilds&quot;:${hotelWidgetElement[1].noOfChilds},&quot;childAges&quot;:[{&quot;age&quot;:${hotelWidgetElement[1].childAges[0].age}},{&quot;age&quot;:${hotelWidgetElement[1].childAges[1].age}}]}],&quot;guestDetails&quot;:{},&quot;countryCode&quot;:&quot;&quot;,&quot;hotelName&quot;:&quot;&quot;,&quot;locationName&quot;:&quot;&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (X11) (Linux x86_64)&quot;,&quot;productSequence&quot;:0,&quot;passengerType&quot;:&quot;&quot;,&quot;passengerIdList&quot;:[],&quot;corporateIdList&quot;:[]},&quot;searchPriceRequestBean&quot;:{&quot;sessionId&quot;:&quot;WrkIjDRpyMBqIzJ8Tkmd6Ho-38lnMdUqUi0nXKP7&quot;,&quot;hotelName&quot;:null,&quot;cityName&quot;:&quot;Paris&quot;,&quot;countryCode&quot;:&quot;FR&quot;,&quot;latitude&quot;:null,&quot;longitude&quot;:null,&quot;languageCode&quot;:&quot;en&quot;,&quot;countryName&quot;:&quot;France&quot;,&quot;cityCode&quot;:&quot;4166&quot;,&quot;totalResultCount&quot;:&quot;200&quot;,&quot;corporateId&quot;:null,&quot;agencyCode&quot;:&quot;AED&quot;,&quot;paxNationality&quot;:&quot;IN&quot;,&quot;checkInDate&quot;:&quot;${myFutureDate}&quot;,&quot;checkOutDate&quot;:&quot;${myFutureDate1}&quot;,&quot;paxType&quot;:null,&quot;geoDistance&quot;:null,&quot;hotelCode&quot;:null,&quot;userAgentData&quot;:&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36 (Linux x86_64)&quot;,&quot;countryOfResidence&quot;:&quot;ID&quot;,&quot;noOfRooms&quot;:1,&quot;hotelWidget&quot;:{&quot;pageNumber&quot;:0,&quot;orderId&quot;:null,&quot;hotelName&quot;:&quot;&quot;,&quot;cityName&quot;:&quot;Paris&quot;,&quot;countryCode&quot;:&quot;&quot;,&quot;latitude&quot;:null,&quot;longitude&quot;:null,&quot;countryName&quot;:&quot;France&quot;,&quot;countryId&quot;:null,&quot;cityCode&quot;:&quot;&quot;,&quot;nationality&quot;:&quot;India&quot;,&quot;quotationId&quot;:null,&quot;productSequence&quot;:0,&quot;quoteProductList&quot;:null,&quot;checkInDate&quot;:&quot;${myFutureDate}&quot;,&quot;checkOutDate&quot;:&quot;${myFutureDate1}&quot;,&quot;searchBy&quot;:null,&quot;editCountryOfResidence&quot;:null,&quot;editNationality&quot;:null,&quot;editTravelFor&quot;:null,&quot;requestType&quot;:null,&quot;hotelFiveSearch&quot;:null,&quot;geoDistance&quot;:null,&quot;hotelWidgetElement&quot;:[{&quot;noOfAdults&quot;:1,&quot;noOfChilds&quot;:1,&quot;childAges&quot;:[{&quot;age&quot;:2}],&quot;room&quot;:null}],&quot;reqBeanParam&quot;:null,&quot;hotelDetails&quot;:null,&quot;hotelsData&quot;:null,&quot;passengerType&quot;:&quot;&quot;,&quot;corporateIdList&quot;:[],&quot;passengerIdList&quot;:[],&quot;noOfAdults&quot;:1,&quot;noOfChilds&quot;:1,&quot;nationalityCode&quot;:&quot;IN&quot;,&quot;hotelId&quot;:null,&quot;noOfRooms&quot;:1,&quot;totalGuests&quot;:2,&quot;guestDetails&quot;:{&quot;adultDetail&quot;:null,&quot;childDetail&quot;:null,&quot;specialService&quot;:null,&quot;guestType&quot;:null,&quot;isLeadGuest&quot;:null,&quot;guestInRoom&quot;:null,&quot;comment&quot;:null},&quot;residenceCode&quot;:&quot;ID&quot;,&quot;travelFor&quot;:&quot;work&quot;,&quot;residence&quot;:&quot;Indonesia&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36 (Linux x86_64)&quot;,&quot;geoString&quot;:&quot;&quot;,&quot;noOfDays&quot;:1,&quot;locationName&quot;:&quot;&quot;,&quot;redirect&quot;:null,&quot;searchThrough&quot;:null},&quot;custNationality&quot;:&quot;India&quot;,&quot;totalPax&quot;:2,&quot;searchType&quot;:null,&quot;childAge&quot;:0,&quot;roomList&quot;:[{&quot;totalFare&quot;:null,&quot;roomIndex&quot;:null,&quot;hotelCode&quot;:null,&quot;roomTypeName&quot;:null,&quot;ratePlanCode&quot;:null,&quot;totalPax&quot;:2,&quot;agentMarkup&quot;:null,&quot;totalGuests&quot;:2,&quot;adults&quot;:&quot;1&quot;,&quot;occupancyType&quot;:null,&quot;occupancyCode&quot;:null,&quot;noCots&quot;:0,&quot;roomCount&quot;:0,&quot;resultCount&quot;:0,&quot;childrenAge&quot;:[2],&quot;roomTypeCode&quot;:null,&quot;roomFare&quot;:null,&quot;roomTax&quot;:null,&quot;guestType&quot;:[&quot;ADT&quot;,&quot;CHD-2&quot;],&quot;guestChildAge&quot;:[&quot;2&quot;],&quot;paxTypeList&quot;:[&quot;AD&quot;,&quot;CH-2&quot;],&quot;tboGuestType&quot;:[&quot;ADT&quot;,&quot;CHD&quot;],&quot;currency&quot;:null,&quot;children&quot;:&quot;1&quot;}],&quot;geoString&quot;:&quot;&quot;,&quot;serviceType&quot;:null,&quot;searchThrough&quot;:null,&quot;page&quot;:1,&quot;reqValid&quot;:false,&quot;paxAges&quot;:[&quot;2&quot;,&quot;25&quot;],&quot;pack&quot;:false,&quot;guestNationality&quot;:&quot;IN&quot;,&quot;validReq&quot;:true,&quot;expValidReq&quot;:true,&quot;gtaValidReq&quot;:true,&quot;tboValidReq&quot;:true,&quot;lohValidReq&quot;:true,&quot;hbdValidReq&quot;:true,&quot;dotValidReq&quot;:true,&quot;tvcValidReq&quot;:true,&quot;mikValidReq&quot;:true,&quot;tboCityCode&quot;:&quot;131408&quot;,&quot;starRatings&quot;:null,&quot;hotelStar&quot;:0,&quot;sortBy&quot;:null,&quot;sortingType&quot;:null,&quot;requestForMail&quot;:null,&quot;priceOrder&quot;:null,&quot;startOrder&quot;:null,&quot;nameOrder&quot;:null,&quot;locationCode&quot;:null,&quot;travcoCityCode&quot;:null,&quot;tboCityName&quot;:&quot;Paris&quot;,&quot;runNo&quot;:0,&quot;noOfChildren&quot;:1,&quot;rateBasis&quot;:0,&quot;getRooms&quot;:&quot;true&quot;,&quot;resultsPerPage&quot;:5,&quot;destinationZone&quot;:&quot;1402&quot;,&quot;nights&quot;:0,&quot;cityNumber&quot;:&quot;4166&quot;,&quot;numberOfAdults&quot;:&quot;1&quot;,&quot;numberOfChildren&quot;:&quot;1&quot;,&quot;lohCountryCode&quot;:&quot;49&quot;,&quot;tvcCountryCode&quot;:&quot;FRA&quot;,&quot;tvcCityCode&quot;:&quot;PAR&quot;,&quot;tboCountryName&quot;:&quot;France&quot;,&quot;gtaCityCode&quot;:&quot;ALFT,AULN,BLA1,BOUN,BOUX,CACN,CDG,CHAN,CHE7,COUY,DISN,EVRY,FONE,IVRY,JOUY,LBG,LIEU,MASY,NOIS,ORGE,ORSY,ORY,PAR,RUEI,SACL,SAUX,VELZ,VERS&quot;,&quot;dotwCurrencyCode&quot;:&quot;366&quot;,&quot;hbCityCode&quot;:&quot;PAR&quot;,&quot;dotwCountryCode&quot;:&quot;66&quot;,&quot;mikiCityCode&quot;:&quot;4166&quot;,&quot;dotwCityCode&quot;:&quot;7674&quot;,&quot;dotNationality&quot;:&quot;170&quot;,&quot;dotCountryOfResidence&quot;:&quot;20&quot;,&quot;dotCitiesList&quot;:[&quot;7674_PARIS&quot;],&quot;hbdCitiesList&quot;:[&quot;PAR&quot;],&quot;lohCitiesList&quot;:[&quot;1395&quot;,&quot;1402&quot;],&quot;gdiCitiesList&quot;:[&quot;ALFT,AULN,BLA1,BOUN,BOUX,CACN,CDG,CHAN,CHE7,COUY,DISN,EVRY,FONE,IVRY,JOUY,LBG,LIEU,MASY,NOIS,ORGE,ORSY,ORY,PAR,RUEI,SACL,SAUX,VELZ,VERS&quot;],&quot;mikCitiesList&quot;:[&quot;4166&quot;],&quot;tvcCitiesList&quot;:[&quot;PAR,FRA&quot;],&quot;thoCitiesList&quot;:[&quot;131408&quot;],&quot;expCurrConRate&quot;:1,&quot;tboCurrConRate&quot;:3.67,&quot;gtaCurrConRate&quot;:3.67,&quot;tvcCurrConRate&quot;:3.67,&quot;lohCurrConRate&quot;:3.67,&quot;mikCurrConRate&quot;:0.22879,&quot;dotCurrConRate&quot;:3.67,&quot;hbdCurrConRate&quot;:3.67,&quot;agencyCurrCode&quot;:&quot;AED&quot;,&quot;suppCurrCode&quot;:null,&quot;currConvRate&quot;:null,&quot;expCurCode&quot;:&quot;AED&quot;,&quot;dom&quot;:false,&quot;tboCurCode&quot;:&quot;AED&quot;,&quot;gtaCurCode&quot;:&quot;AED&quot;,&quot;lohCurCode&quot;:&quot;AED&quot;,&quot;mikCurCode&quot;:&quot;EUR&quot;,&quot;dotCurCode&quot;:&quot;AED&quot;,&quot;hbdCurCode&quot;:&quot;AED&quot;,&quot;tvcCurCode&quot;:&quot;USD&quot;,&quot;destType&quot;:&quot;C&quot;,&quot;commission&quot;:&quot;0&quot;,&quot;specialService&quot;:false,&quot;nearBySearchAllowed&quot;:false,&quot;requestId&quot;:&quot;0&quot;,&quot;adultsCode&quot;:1,&quot;ipAddr&quot;:&quot;192.168.1.53&quot;,&quot;duration&quot;:1,&quot;currencyCode&quot;:&quot;AED&quot;,&quot;packageName&quot;:null},&quot;agencyMarkup&quot;:{&quot;corporateId&quot;:-1,&quot;status&quot;:1,&quot;productRefId&quot;:2,&quot;domInt&quot;:0,&quot;passengerIdList&quot;:[],&quot;corporateIdList&quot;:[],&quot;passengerType&quot;:&quot;&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/hotel/getHotelResults</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">800000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/hotel/hotelListing</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">3</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getFilteredResults" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;searchStaticReqBean&quot;:{&quot;cityName&quot;:&quot;${searchInput}&quot;,&quot;cityCode&quot;:&quot;&quot;,&quot;countryName&quot;:&quot;${searchInput1}&quot;,&quot;checkInDate&quot;:&quot;${myFutureDate}&quot;,&quot;checkOutDate&quot;:&quot;${myFutureDate1}&quot;,&quot;nationality&quot;:&quot;India&quot;,&quot;nationalityCode&quot;:&quot;IN&quot;,&quot;travelFor&quot;:&quot;work&quot;,&quot;noOfRooms&quot;:2,&quot;noOfAdults&quot;:${noOfAdults},&quot;noOfChilds&quot;:${noOfChilds},&quot;noOfDays&quot;:2,&quot;pageNumber&quot;:0,&quot;totalGuests&quot;:${totalGuests},&quot;residence&quot;:&quot;Indonesia&quot;,&quot;residenceCode&quot;:&quot;ID&quot;,&quot;geoString&quot;:&quot;&quot;,&quot;hotelWidgetElement&quot;:[{&quot;noOfAdults&quot;:${hotelWidgetElement[0].noOfAdults},&quot;noOfChilds&quot;:${hotelWidgetElement[0].noOfChilds},&quot;childAges&quot;:[{&quot;age&quot;:${hotelWidgetElement[0].childAges[0].age}}]},{&quot;noOfAdults&quot;:${hotelWidgetElement[1].noOfAdults},&quot;noOfChilds&quot;:${hotelWidgetElement[1].noOfChilds},&quot;childAges&quot;:[{&quot;age&quot;:${hotelWidgetElement[1].childAges[0].age}},{&quot;age&quot;:${hotelWidgetElement[1].childAges[1].age}}]}],&quot;guestDetails&quot;:{},&quot;countryCode&quot;:&quot;&quot;,&quot;hotelName&quot;:&quot;&quot;,&quot;locationName&quot;:&quot;&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (X11) (Linux x86_64)&quot;,&quot;productSequence&quot;:0,&quot;passengerType&quot;:&quot;&quot;,&quot;passengerIdList&quot;:[],&quot;corporateIdList&quot;:[]},&quot;searchPriceRequestBean&quot;:{&quot;sessionId&quot;:&quot;WrkIjDRpyMBqIzJ8Tkmd6Ho-38lnMdUqUi0nXKP7&quot;,&quot;hotelName&quot;:null,&quot;cityName&quot;:&quot;Paris&quot;,&quot;countryCode&quot;:&quot;FR&quot;,&quot;latitude&quot;:null,&quot;longitude&quot;:null,&quot;languageCode&quot;:&quot;en&quot;,&quot;countryName&quot;:&quot;France&quot;,&quot;cityCode&quot;:&quot;4166&quot;,&quot;totalResultCount&quot;:&quot;200&quot;,&quot;corporateId&quot;:null,&quot;agencyCode&quot;:&quot;AED&quot;,&quot;paxNationality&quot;:&quot;IN&quot;,&quot;checkInDate&quot;:&quot;${myFutureDate}&quot;,&quot;checkOutDate&quot;:&quot;${myFutureDate1}&quot;,&quot;paxType&quot;:null,&quot;geoDistance&quot;:null,&quot;hotelCode&quot;:null,&quot;userAgentData&quot;:&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36 (Linux x86_64)&quot;,&quot;countryOfResidence&quot;:&quot;ID&quot;,&quot;noOfRooms&quot;:1,&quot;hotelWidget&quot;:{&quot;pageNumber&quot;:0,&quot;orderId&quot;:null,&quot;hotelName&quot;:&quot;&quot;,&quot;cityName&quot;:&quot;Paris&quot;,&quot;countryCode&quot;:&quot;&quot;,&quot;latitude&quot;:null,&quot;longitude&quot;:null,&quot;countryName&quot;:&quot;France&quot;,&quot;countryId&quot;:null,&quot;cityCode&quot;:&quot;&quot;,&quot;nationality&quot;:&quot;India&quot;,&quot;quotationId&quot;:null,&quot;productSequence&quot;:0,&quot;quoteProductList&quot;:null,&quot;checkInDate&quot;:&quot;${myFutureDate}&quot;,&quot;checkOutDate&quot;:&quot;${myFutureDate1}&quot;,&quot;searchBy&quot;:null,&quot;editCountryOfResidence&quot;:null,&quot;editNationality&quot;:null,&quot;editTravelFor&quot;:null,&quot;requestType&quot;:null,&quot;hotelFiveSearch&quot;:null,&quot;geoDistance&quot;:null,&quot;hotelWidgetElement&quot;:[{&quot;noOfAdults&quot;:1,&quot;noOfChilds&quot;:1,&quot;childAges&quot;:[{&quot;age&quot;:2}],&quot;room&quot;:null}],&quot;reqBeanParam&quot;:null,&quot;hotelDetails&quot;:null,&quot;hotelsData&quot;:null,&quot;passengerType&quot;:&quot;&quot;,&quot;corporateIdList&quot;:[],&quot;passengerIdList&quot;:[],&quot;noOfAdults&quot;:1,&quot;noOfChilds&quot;:1,&quot;nationalityCode&quot;:&quot;IN&quot;,&quot;hotelId&quot;:null,&quot;noOfRooms&quot;:1,&quot;totalGuests&quot;:2,&quot;guestDetails&quot;:{&quot;adultDetail&quot;:null,&quot;childDetail&quot;:null,&quot;specialService&quot;:null,&quot;guestType&quot;:null,&quot;isLeadGuest&quot;:null,&quot;guestInRoom&quot;:null,&quot;comment&quot;:null},&quot;residenceCode&quot;:&quot;ID&quot;,&quot;travelFor&quot;:&quot;work&quot;,&quot;residence&quot;:&quot;Indonesia&quot;,&quot;userAgent&quot;:&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36 (Linux x86_64)&quot;,&quot;geoString&quot;:&quot;&quot;,&quot;noOfDays&quot;:1,&quot;locationName&quot;:&quot;&quot;,&quot;redirect&quot;:null,&quot;searchThrough&quot;:null},&quot;custNationality&quot;:&quot;India&quot;,&quot;totalPax&quot;:2,&quot;searchType&quot;:null,&quot;childAge&quot;:0,&quot;roomList&quot;:[{&quot;totalFare&quot;:null,&quot;roomIndex&quot;:null,&quot;hotelCode&quot;:null,&quot;roomTypeName&quot;:null,&quot;ratePlanCode&quot;:null,&quot;totalPax&quot;:2,&quot;agentMarkup&quot;:null,&quot;totalGuests&quot;:2,&quot;adults&quot;:&quot;1&quot;,&quot;occupancyType&quot;:null,&quot;occupancyCode&quot;:null,&quot;noCots&quot;:0,&quot;roomCount&quot;:0,&quot;resultCount&quot;:0,&quot;childrenAge&quot;:[2],&quot;roomTypeCode&quot;:null,&quot;roomFare&quot;:null,&quot;roomTax&quot;:null,&quot;guestType&quot;:[&quot;ADT&quot;,&quot;CHD-2&quot;],&quot;guestChildAge&quot;:[&quot;2&quot;],&quot;paxTypeList&quot;:[&quot;AD&quot;,&quot;CH-2&quot;],&quot;tboGuestType&quot;:[&quot;ADT&quot;,&quot;CHD&quot;],&quot;currency&quot;:null,&quot;children&quot;:&quot;1&quot;}],&quot;geoString&quot;:&quot;&quot;,&quot;serviceType&quot;:null,&quot;searchThrough&quot;:null,&quot;page&quot;:1,&quot;reqValid&quot;:false,&quot;paxAges&quot;:[&quot;2&quot;,&quot;25&quot;],&quot;pack&quot;:false,&quot;guestNationality&quot;:&quot;IN&quot;,&quot;validReq&quot;:true,&quot;expValidReq&quot;:true,&quot;gtaValidReq&quot;:true,&quot;tboValidReq&quot;:true,&quot;lohValidReq&quot;:true,&quot;hbdValidReq&quot;:true,&quot;dotValidReq&quot;:true,&quot;tvcValidReq&quot;:true,&quot;mikValidReq&quot;:true,&quot;tboCityCode&quot;:&quot;131408&quot;,&quot;starRatings&quot;:null,&quot;hotelStar&quot;:0,&quot;sortBy&quot;:null,&quot;sortingType&quot;:null,&quot;requestForMail&quot;:null,&quot;priceOrder&quot;:null,&quot;startOrder&quot;:null,&quot;nameOrder&quot;:null,&quot;locationCode&quot;:null,&quot;travcoCityCode&quot;:null,&quot;tboCityName&quot;:&quot;Paris&quot;,&quot;runNo&quot;:0,&quot;noOfChildren&quot;:1,&quot;rateBasis&quot;:0,&quot;getRooms&quot;:&quot;true&quot;,&quot;resultsPerPage&quot;:5,&quot;destinationZone&quot;:&quot;1402&quot;,&quot;nights&quot;:0,&quot;cityNumber&quot;:&quot;4166&quot;,&quot;numberOfAdults&quot;:&quot;1&quot;,&quot;numberOfChildren&quot;:&quot;1&quot;,&quot;lohCountryCode&quot;:&quot;49&quot;,&quot;tvcCountryCode&quot;:&quot;FRA&quot;,&quot;tvcCityCode&quot;:&quot;PAR&quot;,&quot;tboCountryName&quot;:&quot;France&quot;,&quot;gtaCityCode&quot;:&quot;ALFT,AULN,BLA1,BOUN,BOUX,CACN,CDG,CHAN,CHE7,COUY,DISN,EVRY,FONE,IVRY,JOUY,LBG,LIEU,MASY,NOIS,ORGE,ORSY,ORY,PAR,RUEI,SACL,SAUX,VELZ,VERS&quot;,&quot;dotwCurrencyCode&quot;:&quot;366&quot;,&quot;hbCityCode&quot;:&quot;PAR&quot;,&quot;dotwCountryCode&quot;:&quot;66&quot;,&quot;mikiCityCode&quot;:&quot;4166&quot;,&quot;dotwCityCode&quot;:&quot;7674&quot;,&quot;dotNationality&quot;:&quot;170&quot;,&quot;dotCountryOfResidence&quot;:&quot;20&quot;,&quot;dotCitiesList&quot;:[&quot;7674_PARIS&quot;],&quot;hbdCitiesList&quot;:[&quot;PAR&quot;],&quot;lohCitiesList&quot;:[&quot;1395&quot;,&quot;1402&quot;],&quot;gdiCitiesList&quot;:[&quot;ALFT,AULN,BLA1,BOUN,BOUX,CACN,CDG,CHAN,CHE7,COUY,DISN,EVRY,FONE,IVRY,JOUY,LBG,LIEU,MASY,NOIS,ORGE,ORSY,ORY,PAR,RUEI,SACL,SAUX,VELZ,VERS&quot;],&quot;mikCitiesList&quot;:[&quot;4166&quot;],&quot;tvcCitiesList&quot;:[&quot;PAR,FRA&quot;],&quot;thoCitiesList&quot;:[&quot;131408&quot;],&quot;expCurrConRate&quot;:1,&quot;tboCurrConRate&quot;:3.67,&quot;gtaCurrConRate&quot;:3.67,&quot;tvcCurrConRate&quot;:3.67,&quot;lohCurrConRate&quot;:3.67,&quot;mikCurrConRate&quot;:0.22879,&quot;dotCurrConRate&quot;:3.67,&quot;hbdCurrConRate&quot;:3.67,&quot;agencyCurrCode&quot;:&quot;AED&quot;,&quot;suppCurrCode&quot;:null,&quot;currConvRate&quot;:null,&quot;expCurCode&quot;:&quot;AED&quot;,&quot;dom&quot;:false,&quot;tboCurCode&quot;:&quot;AED&quot;,&quot;gtaCurCode&quot;:&quot;AED&quot;,&quot;lohCurCode&quot;:&quot;AED&quot;,&quot;mikCurCode&quot;:&quot;EUR&quot;,&quot;dotCurCode&quot;:&quot;AED&quot;,&quot;hbdCurCode&quot;:&quot;AED&quot;,&quot;tvcCurCode&quot;:&quot;USD&quot;,&quot;destType&quot;:&quot;C&quot;,&quot;commission&quot;:&quot;0&quot;,&quot;specialService&quot;:false,&quot;nearBySearchAllowed&quot;:false,&quot;requestId&quot;:&quot;0&quot;,&quot;adultsCode&quot;:1,&quot;ipAddr&quot;:&quot;192.168.1.53&quot;,&quot;duration&quot;:1,&quot;currencyCode&quot;:&quot;AED&quot;,&quot;packageName&quot;:null},&quot;agencyMarkup&quot;:{&quot;corporateId&quot;:-1,&quot;status&quot;:1,&quot;productRefId&quot;:2,&quot;domInt&quot;:0,&quot;passengerIdList&quot;:[],&quot;corporateIdList&quot;:[],&quot;passengerType&quot;:&quot;&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">satguruportal/hotel/getFilteredResults</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout">800000</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://192.168.1.229:8070/satguruportal/hotel/hotelListing</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">30927</stringProp>
          </ConstantTimer>
          <hashTree/>
          <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Size Assertion" enabled="false">
            <stringProp name="Assertion.test_field">SizeAssertion.response_network_size</stringProp>
            <stringProp name="SizeAssertion.size">8000903.00</stringProp>
            <intProp name="SizeAssertion.operator">5</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
          </SizeAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/home/ttuser3/data/apache-jmeter-3.2/bin/Results/full.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
